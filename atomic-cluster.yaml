heat_template_version: 2014-10-16


description: >
  Deploy a clustor of Atomic hosts using Heat.


parameters:

  ssh_key_name:
    type: string
    description: Name of the SSH keypair registered with Nova
    default: default
    constraints:
    - custom_constraint: nova.keypair

  server_image:
    type: string
    description: Name or ID of the Atomic Host image registered with Glance
    constraints:
    - custom_constraint: glance.image

  flavor:
    type: string
    description: The Nova flavor to use for the Atomic Host servers
    default: m1.medium
    constraints:
    - custom_constraint: nova.flavor

  external_network:
    type: string
    description: >
      The external network that provides floating IP addresses for the Atomic
      Host servers
    constraints:
    - custom_constraint: neutron.network

  dns_nameserver:
    type: comma_delimited_list
    description: address of a dns nameserver reachable in your environment
    default: 8.8.8.8

  node_count:
    type: number
    description: >
      Number of Atomic Hosts to create.

  rhn_username:
    type: string
    description: >
      The username for registering the hosts with RHN. If empty, they will not
      be registered.
    default: ''

  rhn_password:
    type: string
    description: >
      The password for registering the hosts with RHN. If empty, they will not
      be registered.
    hidden: true
    default: ''


resources:

  fixed_network:
    type: OS::Neutron::Net

  fixed_subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: 192.168.0.0/24
      network: {get_resource: fixed_network}
      dns_nameservers: {get_param: dns_nameserver}

  external_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: {get_param: external_network}

  external_router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: {get_resource: external_router}
      subnet: {get_resource: fixed_subnet}

  atomic_hosts:
    depends_on: external_router_interface
    type: OS::Heat::AutoScalingGroup
    properties:
      desired_capacity: {get_param: node_count}
      min_size: 0
      max_size: 100
      resource:
        type: atomic-host.yaml
        properties:
          image: {get_param: server_image}
          flavor: {get_param: flavor}
          key_name: {get_param: ssh_key_name}
          external_network: {get_param: external_network}
          fixed_network: {get_resource: fixed_network}
          fixed_subnet: {get_resource: fixed_subnet}
          rhn_username: {get_param: rhn_username}
          rhn_password: {get_param: rhn_password}

outputs:
  host_ips:
    description: IP addresses of all the Atomic Hosts
    value: {get_attr: [atomic_hosts, outputs_list, ip_address]}